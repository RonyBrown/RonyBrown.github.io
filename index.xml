<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rony Brown Blog</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Rony Brown Blog</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 26 Dec 2024 10:52:23 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Page One</title>
      <link>http://localhost:1313/docs/page-one/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/page-one/</guid>
      <description></description>
    </item>
    <item>
      <title>Page Two</title>
      <link>http://localhost:1313/docs/page-two/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/page-two/</guid>
      <description></description>
    </item>
    <item>
      <title>Rz Ad9361x No Os Pl Rw</title>
      <link>http://localhost:1313/posts/RZ_AD9361_No-Os_pl_rw/</link>
      <pubDate>Thu, 26 Dec 2024 10:52:23 +0800</pubDate>
      <guid>http://localhost:1313/posts/RZ_AD9361_No-Os_pl_rw/</guid>
      <description>驱动介绍&#xD;#&#xD;AD9361通常搭配ZYNQ系列芯片使用，本驱动也是针对ZYNQ芯片对AD9361系列（包含AD9363、AD9364，后文统称AD9361）初始化以及基带数据收发。对于目前网上AD9361的驱动的资料，主要有两种方案：&#xA;方案1：通过PS端初始化并控制数据的收发； 方案2：通过纯PL逻辑初始化并控制数据的收发。 但是方案1的现有资料都是通过PS端通过C语言编程来实现基带信号的收发，而对于大部分基带算法对时间刻度要求严格，仅通过C语言实现基带的收发难以满足很多实际需求，方案2将初始化与基带信号数据收发都集中在纯逻辑端，这样极大的方便了基带信号的发射与接收，但是AD9361初始化流程复杂且繁琐，且需要进行一定的校验才能稳定工作，也会占用过多的逻辑资源，目前测试过多个纯PL控制AD9361，大部分工作稳定性较差，且需要修改配置参数时比较麻烦。&#xA;针对现有驱动存在的问题，对ADI提供的驱动进行修改升级，通过PS端对AD9361进行初始化，PL端对ADC与DAC的IQ通路进行读写，经过多个版本迭代升级，本驱动能够稳定工作，测试多次烧录运行都能够正常工作，且在运行时也可以很简单的修改AD9361收发参数，满足大部分通信算法的设计要求，提高开发的效率，帮助开发者专注于基带算法的实现，而不是浪费过多时间在配置驱动上。&#xA;本驱动仅添加最核心的AD9361的驱动代码，在不影响系统的稳定性与复杂度的情况下尽量保留了完整的数据接口与控制接口，在Block Design中添加核心的IP与配置代码，引出了关键的收发信号接口，在PS端完善了数据通路，使PL端能够单独的控制数据的收发。对于本驱动，完成移植过程非常简单，只需要修改DDR、引脚约束这几个参数就能完成完整功能的移植。&#xA;![image-20241225144918002](RZ_AD9361 Noos PL端收发数据.assets/image-20241225144918002.png)&#xA;驱动移植&#xD;#&#xD;对于ZYNQ7020/ZYNQ7010系列芯片，使用芯片的PS端实现对AD9361初始化，PL端实现基带算法。对于本驱动，只需要进行简单的修改，驱动移植的大致流程分为：&#xA;修改Block Design的ZYNQ7 Processing System IP中的DDR与少量IO 修改连接AD9361的引脚约束 修改Vitis中的platform 首先进入到Vivavo工程，打开Block Design，点击ZYNQ7 Processing System，进入到ZYNQ核设置框图，进入DDR Configuration，根据自己的板子选择对应的DDR型号，如下图。&#xA;![image-20241225145244107](RZ_AD9361 Noos PL端收发数据.assets/image-20241225145244107.png)&#xA;驱动中需要使用到少部分IO，本设计仅保留AD9361正常工作时使用到的外设IO，本驱动需要使用到：&#xA;SPI UART 进入到Peripheral I/O Pins，勾选SPI0，调整对应的引脚（点亮对应引脚的框框），勾选UART1，调整对应的引脚。其他参数不做调整，如工程需要使用到其他外设，勾选并调整对应的外设引脚即可。如下图。&#xA;![image-20241225145319534](RZ_AD9361 Noos PL端收发数据.assets/image-20241225145319534.png)&#xA;设置好后点击下图标记处Validate Design按钮，&#xA;![image-20241225155723553](RZ_AD9361 Noos PL端收发数据.assets/image-20241225155723553.png)&#xA;点击运行后出现无错误无警告的提示框如下图。&#xA;![image-20241225155807932](RZ_AD9361 Noos PL端收发数据.assets/image-20241225155807932.png)&#xA;在工程文件下，如下图，右键system后点击Generate Ouput Products，确认运行。&#xA;![image-20241225160151026](RZ_AD9361 Noos PL端收发数据.assets/image-20241225160151026.png)&#xA;运行完成后，然后修改AD9361的对应的引脚约束，特别注意需要修改的是引脚编号与对应的引脚电平，不要同一个Bank使用不同的电平标准。&#xA;![image-20241223211610699](RZ_AD9361 Noos PL端收发数据.assets/image-20241223211610699.png)&#xA;特别注意：在确认DDR、SPI0、UART1、引脚约束设置都无误的情况下，点击Generate Bitstream编译整个工程，如下图。&#xA;![image-20241225160529882](RZ_AD9361 Noos PL端收发数据.assets/image-20241225160529882.png)&#xA;编译后无报错的情况下，如下图，需要导出硬件描述语言到Vitis里面。&#xA;![image-20241223210719938](RZ_AD9361 Noos PL端收发数据.assets/image-20241223210719938.png)&#xA;点击Vivado菜单栏处的File-Export-Export Hardware，如下图。</description>
    </item>
    <item>
      <title>Git Note</title>
      <link>http://localhost:1313/posts/git-note/</link>
      <pubDate>Tue, 04 Jun 2024 20:39:20 +0800</pubDate>
      <guid>http://localhost:1313/posts/git-note/</guid>
      <description>&#xD;访问问题&#xD;#&#xD;连接不上&#xD;#&#xD;fatal: unable to access &amp;lsquo;&#xD;https://github.com/xxx/.git/&#39;: Failed to connect to github.com port 443 after 21090 ms: Couldn&amp;rsquo;t connect to server&#xA;开启VPN情况&#xD;#&#xD;一般出现这种问题都是开过VPN导致的本机系统端口号和git的端口号不一致导致的。&#xA;解决办法：&#xA;1.查看本机系统端口号&#xA;设置-&amp;gt;网络和Internet-&amp;gt;代理&#xA;2.设置git端口号和上面的端口号保持一致&#xA;git config --global http.proxy 127.0.0.1:7890 git config --global https.proxy 127.0.0.1:7890 设置完成可以查看是否配置成功：&#xA;&amp;gt; git config --global -l user.email=xxx@xx.com user.name=xxx http.proxy=127.0.0.1:7890 https.proxy=127.0.0.1:7890 未开启VPN情况&#xD;#&#xD;还是一样的原因，两边端口不一致导致的，那么直接去掉git代理即可：&#xA;git config --global --unset http.proxy git config --global --unset https.proxy </description>
    </item>
    <item>
      <title>Test</title>
      <link>http://localhost:1313/posts/test/</link>
      <pubDate>Mon, 03 Jun 2024 20:37:49 +0800</pubDate>
      <guid>http://localhost:1313/posts/test/</guid>
      <description>mdmdmdmdm</description>
    </item>
    <item>
      <title>First</title>
      <link>http://localhost:1313/posts/first/</link>
      <pubDate>Mon, 03 Jun 2024 20:25:57 +0800</pubDate>
      <guid>http://localhost:1313/posts/first/</guid>
      <description>ahah</description>
    </item>
  </channel>
</rss>
